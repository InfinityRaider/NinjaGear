
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

// Load Properties
Properties mod = new Properties()
mod.load(new FileInputStream("${project.rootDir}/mod.properties"))

sourceCompatibility = mod.version_java
targetCompatibility = mod.version_java
version = "${mod.version_major}.${mod.version_minor}.${mod.version_patch}"
mod.version = version
group = "${mod.group}.${mod.id}"
archivesBaseName = mod.id

minecraft {
    version = "${mod.version_minecraft}-${mod.version_forge}"
    mappings = mod.version_mappings
    runDir = "/run/${mod.version_minecraft}"
    makeObfSourceJar = false
    
    // Replace mod information in reference class.
	replaceIn mod.reference_class
    mod.each { prop ->
		replace "\${mod.${prop.key}}", prop.value
		replace "/*^", "\""
		replace "^*/", "\"; // Default:"
    }
}

dependencies {
    compile project(':lib/InfinityLib')
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Run Stuff
runClient {
	if( project.hasProperty('minecraft_username') && project.hasProperty('minecraft_password') ) {
		args "--username=${project.minecraft_username}"
		args "--password=${project.minecraft_password}"
	}
}
